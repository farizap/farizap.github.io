{"19c2e332-a9d8-5c2b-aff9-1ff53ed7132e":{"id":"19c2e332-a9d8-5c2b-aff9-1ff53ed7132e","path":"/app/garden/index","title":"Index","excerpt":"Index General Zettelkasten ...................... [202101161442] Technology Client Side Architecture ...................... [ 20210116170‚Ä¶"},"bc4b06c2-d455-5758-8a06-0a02982728c9":{"id":"bc4b06c2-d455-5758-8a06-0a02982728c9","path":"/app/garden/readme","title":"Foam","excerpt":"Foam üëã Welcome to your new Foam Knowledge Base! Getting started This documentation assumes that you have a GitHub account and have  Visual‚Ä¶"},"525f8b21-9d9c-58b0-ac4c-f67baf34cb13":{"id":"525f8b21-9d9c-58b0-ac4c-f67baf34cb13","path":"/app/garden/sources","title":"Sources","excerpt":"Sources twilio-video-app-react \n  : Large scale implementation of interaction layer using react hooks * Precedence"},"00e8cded-2867-59d9-90ae-d1138a9570e7":{"id":"00e8cded-2867-59d9-90ae-d1138a9570e7","path":"/app/garden/todo","title":"Todo","excerpt":"Todo This is an example of a todo list item that's complete Todo lists are useful for keeping organised and focused Survey harga ekspedisi‚Ä¶"},"9c0ecfc2-36f7-5aab-8177-8689c829d481":{"id":"9c0ecfc2-36f7-5aab-8177-8689c829d481","path":"/app/garden/Journal/20210124125451","title":"Baby notes","excerpt":"Baby notes    Breast pump - 2k\n    Electric swinger - \n    Stroller\n  "},"5ca309fc-7a0b-50b4-9290-705fcf4ba302":{"id":"5ca309fc-7a0b-50b4-9290-705fcf4ba302","path":"/app/garden/Journal/20210207103917","title":"DdD","excerpt":"DdD Invariant An invariant is a business rule that must always be consistent.\n https://dddcommunity.org/wp-content/uploads/files/pdf‚Ä¶"},"66e6c655-e5b4-5a4a-8deb-3c2d34a212d9":{"id":"66e6c655-e5b4-5a4a-8deb-3c2d34a212d9","path":"/app/garden/readme/getting-started","title":"Getting Started","excerpt":"Getting Started Welcome to your new foam workspace, let's get you started. Let's go through this to set up your repo: you can navigate the‚Ä¶"},"abf924c4-0507-5ac7-9309-5d30b5916ca5":{"id":"abf924c4-0507-5ac7-9309-5d30b5916ca5","path":"/app/garden/readme/inbox","title":"Inbox","excerpt":"Inbox Here you can write disorganised notes to be categorised later Bullet points are useful, but it could be free form text as well‚Ä¶"},"a27e871e-0e51-5e14-a80c-4deab6137236":{"id":"a27e871e-0e51-5e14-a80c-4deab6137236","path":"/app/garden/readme/wikilinks","title":"Wikilinks","excerpt":"Wikilinks"},"d053fce5-2d0a-5cec-8942-6996147da862":{"id":"d053fce5-2d0a-5cec-8942-6996147da862","path":"/app/garden/zettelkasten/202101161442","title":"Zettelkasten","excerpt":"Zettelkasten #zettelkasten zettel: ‚Äúpaper slip‚Äù;\nzettelkasten: \"slip box\" Zettelkasten is personal tool for thinking and writing, has‚Ä¶"},"47dfdede-537a-54c0-be40-598aec5c34aa":{"id":"47dfdede-537a-54c0-be40-598aec5c34aa","path":"/app/garden/zettelkasten/202101161451","title":"Hypertextual","excerpt":"Hypertextual #zettelkasten  Text that refer to each other text. Zettelkasten require multiple text or notes that can connect via hyperlink‚Ä¶"},"9adb0b49-c0c7-51ba-acd7-f2c78921368e":{"id":"9adb0b49-c0c7-51ba-acd7-f2c78921368e","path":"/app/garden/zettelkasten/202101161458","title":"Principle of Atomicity","excerpt":"Principle of Atomicity #zettelkasten  Text that refer to each other text. Zettelkasten require multiple text or notes that can connect via‚Ä¶"},"c8ad15f3-7bd3-5cca-9eb5-06f97a0ff14b":{"id":"c8ad15f3-7bd3-5cca-9eb5-06f97a0ff14b","path":"/app/garden/zettelkasten/202101161508","title":"Anatomy of Zettel","excerpt":"Anatomy of Zettel #zettelkasten  Three component in a zettel is A unique Identifier [202101161534] The body of zettel Contain the piece of‚Ä¶"},"7d08e41f-1222-52bd-b218-8f00fd156180":{"id":"7d08e41f-1222-52bd-b218-8f00fd156180","path":"/app/garden/zettelkasten/202101161534","title":"Unique identifier of zettel","excerpt":"Unique identifier of zettel #zettelkasten  There are several way to identify notes, the most common are: Luhmann-ID Best for paper-based‚Ä¶"},"8dc9032a-ade7-5dc0-a999-fa45c99aca60":{"id":"8dc9032a-ade7-5dc0-a999-fa45c99aca60","path":"/app/garden/zettelkasten/software/202101161708","title":"Client Side Architecture","excerpt":"Client Side Architecture #architecture #react #frontend Client Side Architecture in  khalilstemmler article  used Model View Presenter as‚Ä¶"},"64f1e980-9190-5cf2-8e19-d2e20818e7f3":{"id":"64f1e980-9190-5cf2-8e19-d2e20818e7f3","path":"/app/garden/zettelkasten/software/202101161718","title":"When to integration test","excerpt":"When to integration test #softwaretesting Kent C. Dodds recommends integration tests when 90% of your users'  primary use cases  can be‚Ä¶"},"244c542e-0b44-5fd2-af58-be1f5caad54a":{"id":"244c542e-0b44-5fd2-af58-be1f5caad54a","path":"/app/garden/zettelkasten/software/202101161722","title":"Separation of Concern (SoC)","excerpt":"Separation of Concern (SoC) #softwareprinciple #SoC Don't write your program as one block code. Divide it into chunks that has  simple‚Ä¶"},"69e31990-22f8-59d9-ac13-889cfba38535":{"id":"69e31990-22f8-59d9-ac13-889cfba38535","path":"/app/garden/zettelkasten/software/202101161747","title":"High cohesion & Low coupling","excerpt":"High cohesion & Low coupling #softwareprinciple Cohesion : Measure similarity by set of duty or detail.\nCoupling : Dependence of the part on‚Ä¶"},"4c594d28-faa8-5372-b62e-d8fcfdc7de76":{"id":"4c594d28-faa8-5372-b62e-d8fcfdc7de76","path":"/app/garden/zettelkasten/software/202101172257","title":"Feature as Vertical slice","excerpt":"Feature as Vertical slice #softwareprinciple Naturally when we add or update feature, we are modifying a part of vertical slice in our apps‚Ä¶"},"503718af-3dac-5377-83d7-3a086f0f284a":{"id":"503718af-3dac-5377-83d7-3a086f0f284a","path":"/app/garden/zettelkasten/software/202101212043","title":"Presentation Component","excerpt":"Presentation Component #architecture Render the UI & create user event It is implementation detail / low level detail in our apps. Most‚Ä¶"},"f1804c8b-8b82-5be1-91ce-617612db0f12":{"id":"f1804c8b-8b82-5be1-91ce-617612db0f12","path":"/app/garden/zettelkasten/software/202101212051","title":"UI Logic","excerpt":"UI Logic #architecture View Behavior & local component state In this layer, we have logic for the view. Render a view by certain condition‚Ä¶"},"85590e88-04ef-5f55-995e-a6652e85c7e1":{"id":"85590e88-04ef-5f55-995e-a6652e85c7e1","path":"/app/garden/zettelkasten/software/202101212057","title":"Treatise of State","excerpt":"Treatise of State #frontend local (component) : State that belongs to a single component. Can also be thought about as UI state. UI state‚Ä¶"},"182e761a-3880-5ff8-a694-7b6e69b92a09":{"id":"182e761a-3880-5ff8-a694-7b6e69b92a09","path":"/app/garden/zettelkasten/software/202101212100","title":"Component / Controller (Client Side)","excerpt":"Component / Controller (Client Side) #architecture The Glue layer ( Pages) Responsibility: Consume user event & pass them to the model‚Ä¶"},"54598595-e4e5-562c-a842-33a210f1f018":{"id":"54598595-e4e5-562c-a842-33a210f1f018","path":"/app/garden/zettelkasten/software/202101212257","title":"Collocation","excerpt":"Collocation #architecture colocated or co-located; colocating or co-locating; colocates or co-locates : to locate (two or more things‚Ä¶"},"216aec3d-e4bc-546a-bc2f-c283951e8e83":{"id":"216aec3d-e4bc-546a-bc2f-c283951e8e83","path":"/app/garden/zettelkasten/software/202101241351","title":"Pre rendering site","excerpt":"Pre rendering site #nextjs Pre rendering site has two forms (in Next js).  Static Generation = generate the HTML at build time. The pre‚Ä¶"},"f9edb7a7-52fb-5b95-ba83-ae26c68d1ef3":{"id":"f9edb7a7-52fb-5b95-ba83-ae26c68d1ef3","path":"/app/garden/zettelkasten/software/202102161344","title":"Cypress","excerpt":"Cypress #cypress #softwaretesting On Progress How To run backend & client in background (Github action)"},"fe48507f-a8c9-5629-b2a1-3fa307c86d62":{"id":"fe48507f-a8c9-5629-b2a1-3fa307c86d62","path":"/app/garden/zettelkasten/software/202102281612","title":"Interaction Layer","excerpt":"Interaction Layer #architecture Model Behavior Application (or Interaction) Logic is logic that decide what happen next. We can implement‚Ä¶"},"cd15990b-aac9-5cf4-9832-f7d5b924250d":{"id":"cd15990b-aac9-5cf4-9832-f7d5b924250d","path":"/app/garden/zettelkasten/software/202102281626","title":"Networking & data fetching (Infrastructure)","excerpt":"Networking & data fetching (Infrastructure) #architecture Performing API calls and reporting metadata state Responsibility: Know where the‚Ä¶"},"4da4eb8b-419b-5ac6-8c31-4fd1719da449":{"id":"4da4eb8b-419b-5ac6-8c31-4fd1719da449","path":"/app/garden/zettelkasten/software/202102281629","title":"State management & storage (infrastructure)","excerpt":"State management & storage (infrastructure) #architecture Storage, updating data, reactivity Responsibility: Storage: Hold onto global state‚Ä¶"},"d193655e-fcd3-5ca1-b8c6-a8d71d933163":{"id":"d193655e-fcd3-5ca1-b8c6-a8d71d933163","path":"/app/garden/zettelkasten/software/202102281635","title":"C4 Diagram","excerpt":"C4 Diagram #c4 A common set of  abstraction  is more important than a common notation Divided into 4 parts Software System Container‚Ä¶"},"e1d6fecf-39b2-5025-93ed-5b17a9f5498b":{"id":"e1d6fecf-39b2-5025-93ed-5b17a9f5498b","path":"/app/garden/zettelkasten/software/202102281643","title":"Modular Monolith","excerpt":"Modular Monolith #c4 \" If people can't build monolith properly, microservices won't help\" \"Model-Code Gap\" : The difference between our‚Ä¶"},"6ed073f8-c8b1-582d-9e1c-b3cd93921c7a":{"id":"6ed073f8-c8b1-582d-9e1c-b3cd93921c7a","path":"/app/garden/zettelkasten/software/202103061329","title":"Name, Construct, Structure","excerpt":"Name, Construct, Structure #architecture Name What is? Naming classes, files, folder Approach #1  Name Files = Domain (Subdomain‚Ä¶"}}