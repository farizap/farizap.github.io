{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/app/garden/zettelkasten/202101161458","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"principle-of-atomicity\"\n  }, \"Principle of Atomicity\"), mdx(\"p\", null, \"#zettelkasten \"), mdx(\"p\", null, \"Text that refer to each other text. Zettelkasten require multiple text or notes that can connect via hyperlink.\\nEach text has unique id by which we can refer to it\"), mdx(\"p\", null, \"Ref:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://zettelkasten.de/introduction/\"\n  }, \"Zettelkasten Introduction\"))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"zettelkasten\"\n  }, \"Zettelkasten\"), mdx(\"p\", null, \"#zettelkasten\"), mdx(\"p\", null, \"zettel: \\u201Cpaper slip\\u201D;\\nzettelkasten: \\\"slip box\\\"\"), mdx(\"p\", null, \"Zettelkasten is personal tool for thinking and writing, has hypertextual feature. Focus on connection, not collection.\"), mdx(\"p\", null, \"Most important traits of zettelkasten is:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"hyper-textual [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Foam/2304fb119b51bfb2f740e1d08dcf0431/202101161451.md\",\n    \"title\": \"Hypertextual\"\n  }, \"202101161451\"), \"]. Connecting not collecting\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Principle of Atomicity [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Foam/36017f7104aadee97c273baa7f25d856/202101161458.md\",\n    \"title\": \"Principle of Atomicity\"\n  }, \"202101161458\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It is personal. One Zettelkasten per person, and one person per Zettelkasten\")), mdx(\"p\", null, \"Anatomy of ZettelKasten [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Foam/47c8003e30436110734f7ae66ad593f1/202101161508.md\",\n    \"title\": \"Anatomy of Zettel\"\n  }, \"202101161508\"), \"]\"), mdx(\"p\", null, \"Ref:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://zettelkasten.de/introduction/\"\n  }, \"Zettelkasten Introduction\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"d053fce5-2d0a-5cec-8942-6996147da862","fields":{"slug":"/app/garden/zettelkasten/202101161442","title":"Zettelkasten"}}}]},"fields":{"slug":"/app/garden/zettelkasten/202101161458","title":"Principle of Atomicity"}}},"pageContext":{"id":"9adb0b49-c0c7-51ba-acd7-f2c78921368e"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}