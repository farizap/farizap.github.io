{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/app/garden/zettelkasten/software/202101212257","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"collocation\"\n  }, \"Collocation\"), mdx(\"p\", null, \"#architecture\"), mdx(\"p\", null, \"colocated or co-located; colocating or co-locating; colocates or co-locates\"), mdx(\"p\", null, \": to locate (two or more things) together or be located together\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Place code as close to where it's relevant as possible\")), mdx(\"p\", null, \"Common case is in\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Comment : in separate folder or alongside code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"test : separate / alongside\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"css\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"state\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"utils function : can be out of sync and unused if placed far from the code that use the function\")), mdx(\"p\", null, \"The benefit is\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"maintainability\\nCan be out of sync. We can delete the code but forget to delete the docs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"applicability\\nPeople can easily forget to look to important notes in docs if it puts in separate file\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ease to use\\nHarder to switching context.\")), mdx(\"p\", null, \"Some exception for something like e2e or integration test. Because they dont really need to know the code\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kentcdodds.com/blog/colocation\"\n  }, \"https://kentcdodds.com/blog/colocation\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/app/garden/zettelkasten/software/202101212257","title":"Collocation"}}},"pageContext":{"id":"54598595-e4e5-562c-a842-33a210f1f018"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}