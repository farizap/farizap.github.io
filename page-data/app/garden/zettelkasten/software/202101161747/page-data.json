{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/app/garden/zettelkasten/software/202101161747","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"high-cohesion--low-coupling\"\n  }, \"High cohesion & Low coupling\"), mdx(\"p\", null, \"#softwareprinciple\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Cohesion : Measure similarity by set of duty or detail.\\nCoupling : Dependence of the part on the rest of the system \")), mdx(\"p\", null, \"Benefits of high cohesion & low coupling\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Better code clarity\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Reusability (DRY)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Better testability\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Easy to maintain & develop\")), mdx(\"p\", null, \"Ref:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://nalexn.github.io/separation-of-concerns/\"\n  }, \"nalexn.githun/separation-of-concerns\"))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"separation-of-concern-soc\"\n  }, \"Separation of Concern (SoC)\"), mdx(\"p\", null, \"#softwareprinciple #SoC\"), mdx(\"p\", null, \"Don't write your program as one block code. Divide it into chunks that has \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"simple\"), \" function and job. The objective is to achieve high cohesion & low coupling [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/93f875d7d2ddc1255f75f66c2e97e694/202101161747.md\",\n    \"title\": \"High cohesion & Low coupling\"\n  }, \"202101161747\"), \"]\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"h3\", {\n    parentName: \"li\",\n    \"id\": \"soc-for-programming-function\"\n  }, \"SoC for programming function\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The lowest level of SoC implementation. Avoid creating long complex function. \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"h3\", {\n    parentName: \"li\",\n    \"id\": \"soc-for-modules\"\n  }, \"SoC for Modules\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Group the function under self-contained module that has spesific task and clear correlation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"h3\", {\n    parentName: \"li\",\n    \"id\": \"soc-for-systems-design\"\n  }, \"SoC for system's design\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Outline boundaries of modules. The most common implementation is separating module into layers. Such as MVC\"))), mdx(\"p\", null, \"Ref:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://nalexn.github.io/separation-of-concerns/\"\n  }, \"nalexn.githun/separation-of-concerns\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"244c542e-0b44-5fd2-af58-be1f5caad54a","fields":{"slug":"/app/garden/zettelkasten/software/202101161722","title":"Separation of Concern (SoC)"}}}]},"fields":{"slug":"/app/garden/zettelkasten/software/202101161747","title":"High cohesion & Low coupling"}}},"pageContext":{"id":"69e31990-22f8-59d9-ac13-889cfba38535"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}