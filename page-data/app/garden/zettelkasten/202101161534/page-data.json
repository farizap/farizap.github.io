{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/app/garden/zettelkasten/202101161534","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"unique-identifier-of-zettel\"\n  }, \"Unique identifier of zettel\"), mdx(\"p\", null, \"#zettelkasten \"), mdx(\"p\", null, \"There are several way to identify notes, the most common are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Luhmann-ID\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Best for paper-based zetterkasten\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Timebased-ID\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Simple way to make a unique identifier. ex: 202006110955\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"arbitrary unique string\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"title as identifier\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ok as long as the title is unique. The cons is you must change all link reference when the title change\")))), mdx(\"p\", null, \"Ref:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://zettelkasten.de/introduction/\"\n  }, \"Zettelkasten Introduction\"))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"anatomy-of-zettel\"\n  }, \"Anatomy of Zettel\"), mdx(\"p\", null, \"#zettelkasten \"), mdx(\"p\", null, \"Three component in a zettel is\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A unique Identifier [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/81a9eff88d3564c6341895ea87f0896a/202101161534.md\",\n    \"title\": \"Unique identifier of zettel\"\n  }, \"202101161534\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The body of zettel\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Contain the piece of knowledge you want to capture. Important things is to write it in your own word. Don't copy paste!\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"References\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"States the external source of the knowledge. If it's empty, it means the knowledge is from your own thought\")))), mdx(\"p\", null, \"Ref:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://zettelkasten.de/introduction/\"\n  }, \"Zettelkasten Introduction\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"c8ad15f3-7bd3-5cca-9eb5-06f97a0ff14b","fields":{"slug":"/app/garden/zettelkasten/202101161508","title":"Anatomy of Zettel"}}}]},"fields":{"slug":"/app/garden/zettelkasten/202101161534","title":"Unique identifier of zettel"}}},"pageContext":{"id":"7d08e41f-1222-52bd-b218-8f00fd156180"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}